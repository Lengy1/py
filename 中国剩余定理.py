p= 188980719722312939599670741525749657199
q= 285542837410681929815185657243211948089
c= 1288716005120610238447107994487516282456949535157488967851890643249636143960514002885912602457300860833910005286646288391158486869716320731486731441463943
ap= 2804705527665993106616916539865422192745582325982115542328821379552303967198212155976104551702352092937673859677117
aq= 4474202009939446421702154845731790486027787037904256660458907755838647247389331585632003974919913796690158918283199


n = 2  # 同余方程个数
a = [ap,aq]  # 余数
m = [p*p*q,q*q*p]  # 模数

'''
n = 110         # 同余方程个数
a = [0]*110     # 余数
m = [0]*110     # 模数

'''

"""扩展欧几里得"""

def exgcd(a, b):
    if 0 == b:
        return 1, 0, a
    x, y, q = exgcd(b, a % b)
    x, y = y, (x - a // b * y)
    return x, y, q


"""扩展中国剩余定理"""


def CRT():
    if n == 1:
        if m[0] > a[0]:
            return a[0];
        else:
            return -1;

    for i in range(n):
        if m[i] <= a[i]:
            return -1;

        x, y, d = exgcd(m[0], m[i])
        if (a[i] - a[0]) % d != 0:
            return -1;

        t = m[i] // d;
        x = (a[i] - a[0]) // d * x % t
        a[0] = x * m[0] + a[0];
        m[0] = m[0] * m[i] // d;
        a[0] = (a[0] % m[0] + m[0]) % m[0]

    return a[0];

'''
n, k = map(int, input().split())

for i in range(n):
    m[i], a[i] = map(int, input().split())
'''
e = CRT()
print(e)

import libnum